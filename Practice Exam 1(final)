#!/usr/bin/env python3
import datetime

def q1(floatstr):
    '''
    TLO: 112-SCRPY002, LSA 3,4
    Given the floatstr, which is a comma separated string of
    floats, return a list with each of the floats in the 
    argument as elements in the list.
    '''
    for x in floatstr:
        lst = [float(item) for item in floatstr.split(',')]

    return lst

    pass

def q2(*args):
    '''
    Given the variable length argument list, return the average
    of all the arguments as a float
    '''
    sums = 0
    for t in args:
        sums = sums + t
    avg = sums / len(args)
    return avg
    pass


def q3(lst,n):
    '''
    Given a list (lst) and a number of items (n), return a new 
    list containing the last n entries in lst.

    ***professor answer***
    return lst[-n:]
    '''
    res = list(lst[-n:])
    return res

    pass
    
def q4(strng):
    '''
    Given an input string, return a list containing the ordinal numbers of 
    each character in the string in the order found in the input string.

    ***professor answer***
    return [ord(x) for x in lst(strng)]

    '''
    lst = []
    for ch in strng:
        lst.append(ord(ch))

    return lst
    pass

def q5(strng):
    '''
    Given an input string, return a tuple with each element in the tuple
    containing a single word from the input string in order.

    ***professor answer***
    return tuple(strng.split())

    '''
    lst = (strng.split())

    return tuple(lst)
    pass

def q6():
    '''
    Given an input string similar to the below, craft a regular expression  
    pattern to match and extract the date, time, and temperature in groups  
    and return this pattern. Samples given below.
    Date: 12/31/1999 Time: 11:59 p.m. Temperature: 44 F
    Date: 01/01/2000 Time: 12:01 a.m. Temperature: 5.2 C

    ***professor answer***
    thats a no from me dog
    '''

    pass

def q7(filename):
    '''
    Given a filename, open the file and return the length of the first line 
    in the file excluding the line terminator.

    ***professor answer***
    with open(filename) as fp:
        return len(fp.readline()) -1
    '''
    with open(filename) as fp:
        for _ in range(1):
            line = fp.readline()
        return len(line)-1
    pass

def q8(filename,lst):
    '''
    Given a filename and a list, write each entry from the list to the file
    on separate lines until a case-insensitive entry of "stop" is found in 
    the list. If "stop" is not found in the list, write the entire list to 
    the file on separate lines.

    ***professor answer***
    with open(filename), 'w') as fp:
        for item in lst:
            if item.lower() == 'stop':
                break
            fp.write('{}\n'.format(item))

    '''
    with open(filename, 'w') as fp:
        for i in lst:
            if i == 'stop':
                break
            elif i == 'STOP':
                break
            else:
                fp.write(i+'\n')
    pass

def q9(miltime):
    '''
    TLO: 112-SCRPY003, LSA 1
    Given the military time in the argument miltime, return a string 
    containing the greeting of the day.
    0300-1159 "Good Morning"
    1200-1559 "Good Afternoon"
    1600-2059 "Good Evening"
    2100-0259 "Good Night"

    ***professor answer***
    if miltime >= 301 and miltime < 1201:
        return ...
    elif miltime >= 1200 and miltime < 1600:
        return ...
    elif miltime >= 1600 and miltime < 2100:
        return ...
    elif miltime >= 2100 or miltime < 300:
        return ...


    my code here sucks
    '''
    if miltime <= 1159:
        return "Good Morning"
    elif miltime <= 1559:
        return "Good Afternoon"
    elif miltime <=2059:
        return "Good Evening"
    elif miltime in range(2100, 0259):
        return "Good Night"
    pass
    
def q10(numlist):
    '''
    TLO: 112-SCRPY003, LSA 1
    TLO: 112-SCRPY004, LSA 1
    Given the argument numlist as a list of numbers, return True if all 
    numbers in the list are NOT negative. If any numbers in the list are
    negative, return False.

    ***professor answer***
    for i in numlist:
        if i < 0:
            return False
        return True

    '''
    for i in numlist:
        if i < 0:
            return False
        else:
            return True
    pass

